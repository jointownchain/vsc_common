// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: UserService.proto

package UserService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int64 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber"`
	PageSize   int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{0}
}

func (x *Page) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *Page) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserPassLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password     string `protobuf:"bytes,1,opt,name=password,proto3" json:"password"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	PlatFormType string `protobuf:"bytes,3,opt,name=platFormType,proto3" json:"platFormType"`
}

func (x *UserPassLoginReq) Reset() {
	*x = UserPassLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPassLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPassLoginReq) ProtoMessage() {}

func (x *UserPassLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPassLoginReq.ProtoReflect.Descriptor instead.
func (*UserPassLoginReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{1}
}

func (x *UserPassLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserPassLoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserPassLoginReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

type OauthTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId         string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId"`
	ClientSecret     string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret"`
	GrantType        string `protobuf:"bytes,3,opt,name=grantType,proto3" json:"grantType"`
	RefreshToken     string `protobuf:"bytes,4,opt,name=refreshToken,proto3" json:"refreshToken"`
	OrganizationType string `protobuf:"bytes,5,opt,name=organizationType,proto3" json:"organizationType"`
}

func (x *OauthTokenReq) Reset() {
	*x = OauthTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthTokenReq) ProtoMessage() {}

func (x *OauthTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthTokenReq.ProtoReflect.Descriptor instead.
func (*OauthTokenReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{2}
}

func (x *OauthTokenReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OauthTokenReq) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OauthTokenReq) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *OauthTokenReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OauthTokenReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

type OauthTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string            `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken"`
	TokenType        string            `protobuf:"bytes,2,opt,name=tokenType,proto3" json:"tokenType"`
	ExpiresIn        int64             `protobuf:"varint,3,opt,name=expiresIn,proto3" json:"expiresIn"`
	RefreshToken     string            `protobuf:"bytes,4,opt,name=refreshToken,proto3" json:"refreshToken"`
	OrganizationCode string            `protobuf:"bytes,5,opt,name=organizationCode,proto3" json:"organizationCode"`
	OrganizationId   int64             `protobuf:"varint,6,opt,name=organizationId,proto3" json:"organizationId"`
	OrganizationType string            `protobuf:"bytes,7,opt,name=organizationType,proto3" json:"organizationType"`
	Permissions      []*PermissionInfo `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions"`
}

func (x *OauthTokenResp) Reset() {
	*x = OauthTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthTokenResp) ProtoMessage() {}

func (x *OauthTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthTokenResp.ProtoReflect.Descriptor instead.
func (*OauthTokenResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{3}
}

func (x *OauthTokenResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OauthTokenResp) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *OauthTokenResp) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *OauthTokenResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OauthTokenResp) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *OauthTokenResp) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *OauthTokenResp) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

func (x *OauthTokenResp) GetPermissions() []*PermissionInfo {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UserPassLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Username         string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	Nickname         string                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	Email            string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email"`
	Role             string                 `protobuf:"bytes,5,opt,name=role,proto3" json:"role"`
	OrganizationId   int64                  `protobuf:"varint,6,opt,name=organizationId,proto3" json:"organizationId"`
	Permissions      []*PermissionInfo      `protobuf:"bytes,7,rep,name=permissions,proto3" json:"permissions"`
	ActiveStatus     string                 `protobuf:"bytes,8,opt,name=activeStatus,proto3" json:"activeStatus"`
	RoleName         string                 `protobuf:"bytes,9,opt,name=roleName,proto3" json:"roleName"`
	AgreementVersion int64                  `protobuf:"varint,10,opt,name=agreementVersion,proto3" json:"agreementVersion"`
	AgreementAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=agreementAt,proto3" json:"agreementAt"`
}

func (x *UserPassLoginResp) Reset() {
	*x = UserPassLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPassLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPassLoginResp) ProtoMessage() {}

func (x *UserPassLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPassLoginResp.ProtoReflect.Descriptor instead.
func (*UserPassLoginResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{4}
}

func (x *UserPassLoginResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserPassLoginResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserPassLoginResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserPassLoginResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserPassLoginResp) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserPassLoginResp) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *UserPassLoginResp) GetPermissions() []*PermissionInfo {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserPassLoginResp) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *UserPassLoginResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UserPassLoginResp) GetAgreementVersion() int64 {
	if x != nil {
		return x.AgreementVersion
	}
	return 0
}

func (x *UserPassLoginResp) GetAgreementAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AgreementAt
	}
	return nil
}

type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission    string `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission"`
	PermissionUrl string `protobuf:"bytes,2,opt,name=permissionUrl,proto3" json:"permissionUrl"`
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{5}
}

func (x *PermissionInfo) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *PermissionInfo) GetPermissionUrl() string {
	if x != nil {
		return x.PermissionUrl
	}
	return ""
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	UserPhone      string `protobuf:"bytes,2,opt,name=userPhone,proto3" json:"userPhone"`
	Password       string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	Role           string `protobuf:"bytes,4,opt,name=role,proto3" json:"role"`
	Nickname       string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname"`
	OrganizationId int64  `protobuf:"varint,6,opt,name=organizationId,proto3" json:"organizationId"`
	AccountStatus  string `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus"`
	ManagerId      int64  `protobuf:"varint,8,opt,name=managerId,proto3" json:"managerId"`
	Email          string `protobuf:"bytes,9,opt,name=email,proto3" json:"email"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *CreateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateUserReq) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *CreateUserReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
}

func (x *CreateUserResp) Reset() {
	*x = CreateUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResp) ProtoMessage() {}

func (x *CreateUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResp.ProtoReflect.Descriptor instead.
func (*CreateUserResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUserResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	UserPhone        string `protobuf:"bytes,2,opt,name=userPhone,proto3" json:"userPhone"`
	Password         string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	Role             string `protobuf:"bytes,4,opt,name=role,proto3" json:"role"`
	Nickname         string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname"`
	AccountStatus    string `protobuf:"bytes,6,opt,name=accountStatus,proto3" json:"accountStatus"`
	ManagerId        int64  `protobuf:"varint,7,opt,name=managerId,proto3" json:"managerId"`
	Email            string `protobuf:"bytes,8,opt,name=email,proto3" json:"email"`
	ActiveStatus     string `protobuf:"bytes,9,opt,name=activeStatus,proto3" json:"activeStatus"`
	AgreementVersion int64  `protobuf:"varint,10,opt,name=agreementVersion,proto3" json:"agreementVersion"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *UpdateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateUserReq) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *UpdateUserReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *UpdateUserReq) GetAgreementVersion() int64 {
	if x != nil {
		return x.AgreementVersion
	}
	return 0
}

type UpdateUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatFormType string `protobuf:"bytes,1,opt,name=platFormType,proto3" json:"platFormType"`
}

func (x *UpdateUserResp) Reset() {
	*x = UpdateUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResp) ProtoMessage() {}

func (x *UpdateUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResp.ProtoReflect.Descriptor instead.
func (*UpdateUserResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserResp) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

type ListUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         int64  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId"`
	Nickname       string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	HospitalName   string `protobuf:"bytes,3,opt,name=hospitalName,proto3" json:"hospitalName"`
	CompanyName    string `protobuf:"bytes,4,opt,name=companyName,proto3" json:"companyName"`
	OrganizationId int64  `protobuf:"varint,5,opt,name=organizationId,proto3" json:"organizationId"`
	PlatFormType   string `protobuf:"bytes,6,opt,name=platFormType,proto3" json:"platFormType"`
	ManagerId      int64  `protobuf:"varint,7,opt,name=managerId,proto3" json:"managerId"`
	Page           *Page  `protobuf:"bytes,8,opt,name=page,proto3" json:"page"`
	Email          string `protobuf:"bytes,9,opt,name=email,proto3" json:"email"`
	Username       string `protobuf:"bytes,10,opt,name=username,proto3" json:"username"`
	AccountStatus  string `protobuf:"bytes,11,opt,name=accountStatus,proto3" json:"accountStatus"`
	ActiveStatus   string `protobuf:"bytes,12,opt,name=activeStatus,proto3" json:"activeStatus"`
	UserPhone      string `protobuf:"bytes,13,opt,name=userPhone,proto3" json:"userPhone"`
}

func (x *ListUserReq) Reset() {
	*x = ListUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReq) ProtoMessage() {}

func (x *ListUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReq.ProtoReflect.Descriptor instead.
func (*ListUserReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{10}
}

func (x *ListUserReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ListUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ListUserReq) GetHospitalName() string {
	if x != nil {
		return x.HospitalName
	}
	return ""
}

func (x *ListUserReq) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *ListUserReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *ListUserReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *ListUserReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *ListUserReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListUserReq) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *ListUserReq) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *ListUserReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

type ListUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*UserDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total      int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	PageSize   int64         `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
	PageNumber int64         `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber"`
}

func (x *ListUserResp) Reset() {
	*x = ListUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResp) ProtoMessage() {}

func (x *ListUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResp.ProtoReflect.Descriptor instead.
func (*ListUserResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{11}
}

func (x *ListUserResp) GetList() []*UserDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListUserResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type UserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Username         string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	Role             string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	PlatFormType     string                 `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	UserPhone        string                 `protobuf:"bytes,5,opt,name=userPhone,proto3" json:"userPhone"`
	Nickname         string                 `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname"`
	OrganizationId   int64                  `protobuf:"varint,7,opt,name=organizationId,proto3" json:"organizationId"`
	OrganizationName string                 `protobuf:"bytes,8,opt,name=organizationName,proto3" json:"organizationName"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt"`
	Email            string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email"`
	RoleName         string                 `protobuf:"bytes,11,opt,name=roleName,proto3" json:"roleName"`
	ActiveStatus     string                 `protobuf:"bytes,12,opt,name=activeStatus,proto3" json:"activeStatus"`
	AccountStatus    string                 `protobuf:"bytes,13,opt,name=accountStatus,proto3" json:"accountStatus"`
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{12}
}

func (x *UserDetail) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserDetail) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserDetail) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserDetail) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *UserDetail) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *UserDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserDetail) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *UserDetail) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *UserDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserDetail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDetail) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UserDetail) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *UserDetail) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

type ListRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *Page  `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	PlatFormType string `protobuf:"bytes,2,opt,name=platFormType,proto3" json:"platFormType"`
}

func (x *ListRoleReq) Reset() {
	*x = ListRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleReq) ProtoMessage() {}

func (x *ListRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleReq.ProtoReflect.Descriptor instead.
func (*ListRoleReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{13}
}

func (x *ListRoleReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListRoleReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

type ListRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*RoleDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total      int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	PageSize   int64         `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
	PageNumber int64         `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber"`
}

func (x *ListRoleResp) Reset() {
	*x = ListRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleResp) ProtoMessage() {}

func (x *ListRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleResp.ProtoReflect.Descriptor instead.
func (*ListRoleResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{14}
}

func (x *ListRoleResp) GetList() []*RoleDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListRoleResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRoleResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRoleResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type RoleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId       int64                  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId"`
	Role         string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
	RoleName     string                 `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName"`
	PlatFormType string                 `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	RoleStatus   string                 `protobuf:"bytes,5,opt,name=roleStatus,proto3" json:"roleStatus"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`
}

func (x *RoleDetail) Reset() {
	*x = RoleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDetail) ProtoMessage() {}

func (x *RoleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDetail.ProtoReflect.Descriptor instead.
func (*RoleDetail) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{15}
}

func (x *RoleDetail) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleDetail) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoleDetail) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleDetail) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *RoleDetail) GetRoleStatus() string {
	if x != nil {
		return x.RoleStatus
	}
	return ""
}

func (x *RoleDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteUserReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

type DeleteUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
}

func (x *DeleteUserResp) Reset() {
	*x = DeleteUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResp) ProtoMessage() {}

func (x *DeleteUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResp.ProtoReflect.Descriptor instead.
func (*DeleteUserResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteUserResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{18}
}

func (x *UserInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfoReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

type CreateOauthAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId   int64  `protobuf:"varint,1,opt,name=organizationId,proto3" json:"organizationId"`
	OrganizationType string `protobuf:"bytes,2,opt,name=organizationType,proto3" json:"organizationType"`
	MibId            int64  `protobuf:"varint,3,opt,name=mibId,proto3" json:"mibId"`
	ManagerId        int64  `protobuf:"varint,4,opt,name=managerId,proto3" json:"managerId"`
}

func (x *CreateOauthAccountReq) Reset() {
	*x = CreateOauthAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOauthAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOauthAccountReq) ProtoMessage() {}

func (x *CreateOauthAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOauthAccountReq.ProtoReflect.Descriptor instead.
func (*CreateOauthAccountReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{19}
}

func (x *CreateOauthAccountReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateOauthAccountReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

func (x *CreateOauthAccountReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *CreateOauthAccountReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

type CreateOauthAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId"`
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret"`
}

func (x *CreateOauthAccountResp) Reset() {
	*x = CreateOauthAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOauthAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOauthAccountResp) ProtoMessage() {}

func (x *CreateOauthAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOauthAccountResp.ProtoReflect.Descriptor instead.
func (*CreateOauthAccountResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{20}
}

func (x *CreateOauthAccountResp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateOauthAccountResp) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type ResetOauthAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId         string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId"`
	OrganizationId   int64  `protobuf:"varint,2,opt,name=organizationId,proto3" json:"organizationId"`
	MibId            int64  `protobuf:"varint,3,opt,name=mibId,proto3" json:"mibId"`
	ManagerId        int64  `protobuf:"varint,4,opt,name=managerId,proto3" json:"managerId"`
	OrganizationType string `protobuf:"bytes,5,opt,name=organizationType,proto3" json:"organizationType"`
}

func (x *ResetOauthAccountReq) Reset() {
	*x = ResetOauthAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetOauthAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetOauthAccountReq) ProtoMessage() {}

func (x *ResetOauthAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetOauthAccountReq.ProtoReflect.Descriptor instead.
func (*ResetOauthAccountReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{21}
}

func (x *ResetOauthAccountReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ResetOauthAccountReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *ResetOauthAccountReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *ResetOauthAccountReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *ResetOauthAccountReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

type GetOauthAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId   int64  `protobuf:"varint,1,opt,name=organizationId,proto3" json:"organizationId"`
	OrganizationType string `protobuf:"bytes,2,opt,name=organizationType,proto3" json:"organizationType"`
	MibId            int64  `protobuf:"varint,3,opt,name=mibId,proto3" json:"mibId"`
	ManagerId        int64  `protobuf:"varint,4,opt,name=managerId,proto3" json:"managerId"`
	//也可以直接指定clientId
	ClientId string `protobuf:"bytes,5,opt,name=clientId,proto3" json:"clientId"`
}

func (x *GetOauthAccountReq) Reset() {
	*x = GetOauthAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOauthAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOauthAccountReq) ProtoMessage() {}

func (x *GetOauthAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOauthAccountReq.ProtoReflect.Descriptor instead.
func (*GetOauthAccountReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{22}
}

func (x *GetOauthAccountReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *GetOauthAccountReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

func (x *GetOauthAccountReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *GetOauthAccountReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetOauthAccountReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GetOauthAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken        string                 `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken"`
	TokenType          string                 `protobuf:"bytes,2,opt,name=tokenType,proto3" json:"tokenType"`
	ExpiresIn          int64                  `protobuf:"varint,3,opt,name=expiresIn,proto3" json:"expiresIn"`
	RefreshToken       string                 `protobuf:"bytes,4,opt,name=refreshToken,proto3" json:"refreshToken"`
	OrganizationCode   string                 `protobuf:"bytes,5,opt,name=organizationCode,proto3" json:"organizationCode"`
	OrganizationId     int64                  `protobuf:"varint,6,opt,name=organizationId,proto3" json:"organizationId"`
	Permissions        []*PermissionInfo      `protobuf:"bytes,7,rep,name=permissions,proto3" json:"permissions"`
	OrganizationType   string                 `protobuf:"bytes,8,opt,name=organizationType,proto3" json:"organizationType"`
	MibId              int64                  `protobuf:"varint,9,opt,name=mibId,proto3" json:"mibId"`
	ClientId           string                 `protobuf:"bytes,10,opt,name=clientId,proto3" json:"clientId"`
	TokenExpire        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=tokenExpire,proto3" json:"tokenExpire"`
	RefreshTokenExpire *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=refreshTokenExpire,proto3" json:"refreshTokenExpire"`
}

func (x *GetOauthAccountResp) Reset() {
	*x = GetOauthAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOauthAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOauthAccountResp) ProtoMessage() {}

func (x *GetOauthAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOauthAccountResp.ProtoReflect.Descriptor instead.
func (*GetOauthAccountResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{23}
}

func (x *GetOauthAccountResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetOauthAccountResp) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *GetOauthAccountResp) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *GetOauthAccountResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *GetOauthAccountResp) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *GetOauthAccountResp) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *GetOauthAccountResp) GetPermissions() []*PermissionInfo {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetOauthAccountResp) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

func (x *GetOauthAccountResp) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *GetOauthAccountResp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetOauthAccountResp) GetTokenExpire() *timestamppb.Timestamp {
	if x != nil {
		return x.TokenExpire
	}
	return nil
}

func (x *GetOauthAccountResp) GetRefreshTokenExpire() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshTokenExpire
	}
	return nil
}

type GetOauthTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId         string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId"`
	AccessToken      string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken"`
	OrganizationType string `protobuf:"bytes,3,opt,name=organizationType,proto3" json:"organizationType"`
}

func (x *GetOauthTokenReq) Reset() {
	*x = GetOauthTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOauthTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOauthTokenReq) ProtoMessage() {}

func (x *GetOauthTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOauthTokenReq.ProtoReflect.Descriptor instead.
func (*GetOauthTokenReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{24}
}

func (x *GetOauthTokenReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetOauthTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetOauthTokenReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

type BindOauthPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId   int64    `protobuf:"varint,1,opt,name=organizationId,proto3" json:"organizationId"`
	OrganizationType string   `protobuf:"bytes,2,opt,name=organizationType,proto3" json:"organizationType"`
	MibId            int64    `protobuf:"varint,3,opt,name=mibId,proto3" json:"mibId"`
	ManagerId        int64    `protobuf:"varint,4,opt,name=managerId,proto3" json:"managerId"`
	Permissions      []string `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions"`
}

func (x *BindOauthPermissionReq) Reset() {
	*x = BindOauthPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindOauthPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindOauthPermissionReq) ProtoMessage() {}

func (x *BindOauthPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindOauthPermissionReq.ProtoReflect.Descriptor instead.
func (*BindOauthPermissionReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{25}
}

func (x *BindOauthPermissionReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *BindOauthPermissionReq) GetOrganizationType() string {
	if x != nil {
		return x.OrganizationType
	}
	return ""
}

func (x *BindOauthPermissionReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *BindOauthPermissionReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *BindOauthPermissionReq) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GetRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64  `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64  `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	Role      string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	//注意 ALL为全平台角色，必定返回
	PlatFormType string `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	//ENABLE DISABLE 不填写则不限制
	RoleStatus string `protobuf:"bytes,5,opt,name=roleStatus,proto3" json:"roleStatus"`
	Page       *Page  `protobuf:"bytes,6,opt,name=page,proto3" json:"page"`
}

func (x *GetRolesReq) Reset() {
	*x = GetRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesReq) ProtoMessage() {}

func (x *GetRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesReq.ProtoReflect.Descriptor instead.
func (*GetRolesReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{26}
}

func (x *GetRolesReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *GetRolesReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetRolesReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetRolesReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *GetRolesReq) GetRoleStatus() string {
	if x != nil {
		return x.RoleStatus
	}
	return ""
}

func (x *GetRolesReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type RoleDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId    int64  `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	Role     string `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
	RoleName string `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName"`
	//注意 ALL为全平台角色，必定返回
	PlatFormType string `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	//ENABLE DISABLE 不填写则不限制
	RoleStatus string                 `protobuf:"bytes,5,opt,name=roleStatus,proto3" json:"roleStatus"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`
}

func (x *RoleDTO) Reset() {
	*x = RoleDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDTO) ProtoMessage() {}

func (x *RoleDTO) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDTO.ProtoReflect.Descriptor instead.
func (*RoleDTO) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{27}
}

func (x *RoleDTO) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *RoleDTO) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoleDTO) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleDTO) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *RoleDTO) GetRoleStatus() string {
	if x != nil {
		return x.RoleStatus
	}
	return ""
}

func (x *RoleDTO) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*RoleDTO `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total      int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	PageSize   int64      `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
	PageNumber int64      `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber"`
}

func (x *GetRolesResp) Reset() {
	*x = GetRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResp) ProtoMessage() {}

func (x *GetRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesResp.ProtoReflect.Descriptor instead.
func (*GetRolesResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{28}
}

func (x *GetRolesResp) GetList() []*RoleDTO {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetRolesResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRolesResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRolesResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetPermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64 `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	//查询某个角色拥有的权限
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	//注意 ALL为全平台权限，必定返回
	PlatFormType string `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	//权限类别 WEB 页面权限 API 功能权限
	PermissionType string `protobuf:"bytes,5,opt,name=permissionType,proto3" json:"permissionType"`
	//可以指定权限的父权限，只对层级权限有效
	ParentId int64 `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId"`
	//可以指定获取哪一层级的权限，只对层级权限有效
	Layer int64 `protobuf:"varint,7,opt,name=layer,proto3" json:"layer"`
	Page  *Page `protobuf:"bytes,8,opt,name=page,proto3" json:"page"`
}

func (x *GetPermissionsReq) Reset() {
	*x = GetPermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsReq) ProtoMessage() {}

func (x *GetPermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsReq.ProtoReflect.Descriptor instead.
func (*GetPermissionsReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{29}
}

func (x *GetPermissionsReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *GetPermissionsReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetPermissionsReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetPermissionsReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *GetPermissionsReq) GetPermissionType() string {
	if x != nil {
		return x.PermissionType
	}
	return ""
}

func (x *GetPermissionsReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetPermissionsReq) GetLayer() int64 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *GetPermissionsReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type PermissionDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission            string `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission"`
	PermissionUrl         string `protobuf:"bytes,2,opt,name=permissionUrl,proto3" json:"permissionUrl"`
	PermissionDescription string `protobuf:"bytes,3,opt,name=permissionDescription,proto3" json:"permissionDescription"`
	ParentId              int64  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId"`
	Layer                 int64  `protobuf:"varint,5,opt,name=layer,proto3" json:"layer"`
	//注意 ALL为全平台权限，必定即便指定了platFormType也会返回
	PlatFormType string `protobuf:"bytes,6,opt,name=platFormType,proto3" json:"platFormType"`
	//权限类别 WEB 页面权限 API 功能权限
	PermissionType string                 `protobuf:"bytes,7,opt,name=permissionType,proto3" json:"permissionType"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt"`
	PermissionId   int64                  `protobuf:"varint,9,opt,name=permissionId,proto3" json:"permissionId"`
}

func (x *PermissionDTO) Reset() {
	*x = PermissionDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDTO) ProtoMessage() {}

func (x *PermissionDTO) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDTO.ProtoReflect.Descriptor instead.
func (*PermissionDTO) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{30}
}

func (x *PermissionDTO) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *PermissionDTO) GetPermissionUrl() string {
	if x != nil {
		return x.PermissionUrl
	}
	return ""
}

func (x *PermissionDTO) GetPermissionDescription() string {
	if x != nil {
		return x.PermissionDescription
	}
	return ""
}

func (x *PermissionDTO) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *PermissionDTO) GetLayer() int64 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *PermissionDTO) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *PermissionDTO) GetPermissionType() string {
	if x != nil {
		return x.PermissionType
	}
	return ""
}

func (x *PermissionDTO) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PermissionDTO) GetPermissionId() int64 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

type GetPermissionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*PermissionDTO `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total      int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	PageSize   int64            `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
	PageNumber int64            `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber"`
}

func (x *GetPermissionsResp) Reset() {
	*x = GetPermissionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResp) ProtoMessage() {}

func (x *GetPermissionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResp.ProtoReflect.Descriptor instead.
func (*GetPermissionsResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{31}
}

func (x *GetPermissionsResp) GetList() []*PermissionDTO {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetPermissionsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPermissionsResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPermissionsResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type CreateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64 `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	//角色key，不能重复
	Role       string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	RoleName   string `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName"`
	RoleStatus string `protobuf:"bytes,5,opt,name=roleStatus,proto3" json:"roleStatus"`
	//注意 ALL为全平台权限，必定返回
	PlatFormType string `protobuf:"bytes,6,opt,name=platFormType,proto3" json:"platFormType"`
	//涉及的权限（注意，权限必须与角色的platFormType一致（ALL的也可以））
	Permissions []string `protobuf:"bytes,7,rep,name=permissions,proto3" json:"permissions"`
}

func (x *CreateRoleReq) Reset() {
	*x = CreateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleReq) ProtoMessage() {}

func (x *CreateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleReq.ProtoReflect.Descriptor instead.
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{32}
}

func (x *CreateRoleReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *CreateRoleReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *CreateRoleReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *CreateRoleReq) GetRoleStatus() string {
	if x != nil {
		return x.RoleStatus
	}
	return ""
}

func (x *CreateRoleReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *CreateRoleReq) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type CreateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId"`
	Role   string `protobuf:"bytes,2,opt,name=role,proto3" json:"role"`
}

func (x *CreateRoleResp) Reset() {
	*x = CreateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResp) ProtoMessage() {}

func (x *CreateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResp.ProtoReflect.Descriptor instead.
func (*CreateRoleResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{33}
}

func (x *CreateRoleResp) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreateRoleResp) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64 `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	//需要变更的角色名
	Role       string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	RoleName   string `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName"`
	RoleStatus string `protobuf:"bytes,5,opt,name=roleStatus,proto3" json:"roleStatus"`
	//涉及的权限（注意，权限必须与角色原来的platFormType一致（ALL的也可以））
	Permissions []string `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions"`
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateRoleReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *UpdateRoleReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *UpdateRoleReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleStatus() string {
	if x != nil {
		return x.RoleStatus
	}
	return ""
}

func (x *UpdateRoleReq) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpdateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRoleResp) Reset() {
	*x = UpdateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResp) ProtoMessage() {}

func (x *UpdateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{35}
}

type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64 `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64 `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	//需要删除的角色名（软删除）
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteRoleReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *DeleteRoleReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *DeleteRoleReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type DeleteRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRoleResp) Reset() {
	*x = DeleteRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResp) ProtoMessage() {}

func (x *DeleteRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{37}
}

type ListAgreementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MibId     int64  `protobuf:"varint,1,opt,name=mibId,proto3" json:"mibId"`
	ManagerId int64  `protobuf:"varint,2,opt,name=managerId,proto3" json:"managerId"`
	Role      string `protobuf:"bytes,3,opt,name=role,proto3" json:"role"`
	//注意 ALL为全平台角色，必定返回
	PlatFormType string `protobuf:"bytes,4,opt,name=platFormType,proto3" json:"platFormType"`
	MiName       string `protobuf:"bytes,5,opt,name=miName,proto3" json:"miName"`
	ComName      string `protobuf:"bytes,6,opt,name=comName,proto3" json:"comName"`
	UserName     string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName"`
	Page         *Page  `protobuf:"bytes,8,opt,name=page,proto3" json:"page"`
}

func (x *ListAgreementReq) Reset() {
	*x = ListAgreementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgreementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgreementReq) ProtoMessage() {}

func (x *ListAgreementReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgreementReq.ProtoReflect.Descriptor instead.
func (*ListAgreementReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{38}
}

func (x *ListAgreementReq) GetMibId() int64 {
	if x != nil {
		return x.MibId
	}
	return 0
}

func (x *ListAgreementReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *ListAgreementReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ListAgreementReq) GetPlatFormType() string {
	if x != nil {
		return x.PlatFormType
	}
	return ""
}

func (x *ListAgreementReq) GetMiName() string {
	if x != nil {
		return x.MiName
	}
	return ""
}

func (x *ListAgreementReq) GetComName() string {
	if x != nil {
		return x.ComName
	}
	return ""
}

func (x *ListAgreementReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListAgreementReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type AgreementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Username         string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	Nickname         string                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	RoleName         string                 `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName"`
	MiName           string                 `protobuf:"bytes,5,opt,name=miName,proto3" json:"miName"`
	ComName          string                 `protobuf:"bytes,6,opt,name=comName,proto3" json:"comName"`
	AgreementAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=agreementAt,proto3" json:"agreementAt"`
	AgreementVersion string                 `protobuf:"bytes,8,opt,name=agreementVersion,proto3" json:"agreementVersion"`
}

func (x *AgreementResp) Reset() {
	*x = AgreementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementResp) ProtoMessage() {}

func (x *AgreementResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementResp.ProtoReflect.Descriptor instead.
func (*AgreementResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{39}
}

func (x *AgreementResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgreementResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AgreementResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AgreementResp) GetMiName() string {
	if x != nil {
		return x.MiName
	}
	return ""
}

func (x *AgreementResp) GetComName() string {
	if x != nil {
		return x.ComName
	}
	return ""
}

func (x *AgreementResp) GetAgreementAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AgreementAt
	}
	return nil
}

func (x *AgreementResp) GetAgreementVersion() string {
	if x != nil {
		return x.AgreementVersion
	}
	return ""
}

type ListAgreementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AgreementResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	Page  *Page            `protobuf:"bytes,3,opt,name=page,proto3" json:"page"`
}

func (x *ListAgreementResp) Reset() {
	*x = ListAgreementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgreementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgreementResp) ProtoMessage() {}

func (x *ListAgreementResp) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgreementResp.ProtoReflect.Descriptor instead.
func (*ListAgreementResp) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{40}
}

func (x *ListAgreementResp) GetList() []*AgreementResp {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListAgreementResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAgreementResp) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetAgreementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgreementVersion string `protobuf:"bytes,1,opt,name=agreementVersion,proto3" json:"agreementVersion"`
}

func (x *GetAgreementReq) Reset() {
	*x = GetAgreementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgreementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgreementReq) ProtoMessage() {}

func (x *GetAgreementReq) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgreementReq.ProtoReflect.Descriptor instead.
func (*GetAgreementReq) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{41}
}

func (x *GetAgreementReq) GetAgreementVersion() string {
	if x != nil {
		return x.AgreementVersion
	}
	return ""
}

type AgreementContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgreementContent string `protobuf:"bytes,1,opt,name=agreementContent,proto3" json:"agreementContent"`
}

func (x *AgreementContent) Reset() {
	*x = AgreementContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserService_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementContent) ProtoMessage() {}

func (x *AgreementContent) ProtoReflect() protoreflect.Message {
	mi := &file_UserService_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementContent.ProtoReflect.Descriptor instead.
func (*AgreementContent) Descriptor() ([]byte, []int) {
	return file_UserService_proto_rawDescGZIP(), []int{42}
}

func (x *AgreementContent) GetAgreementContent() string {
	if x != nil {
		return x.AgreementContent
	}
	return ""
}

var File_UserService_proto protoreflect.FileDescriptor

var file_UserService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x42, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6e, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd1, 0x02, 0x0a, 0x0e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9e, 0x03, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x0e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x22, 0x97, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x28, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb2, 0x03, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22,
	0x8d, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0xbc, 0x03, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x45, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0xba, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x92, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x4a, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x7c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x16, 0x42,
	0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d,
	0x69, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x80, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x54, 0x4f, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0xb5, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69,
	0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xf3, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x62,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x62, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x0d, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x10, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xf4, 0x07, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x21, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x13, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x32, 0xf6, 0x02,
	0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0x62, 0x0a, 0x10, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x21, 0x5a, 0x1f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x3b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_UserService_proto_rawDescOnce sync.Once
	file_UserService_proto_rawDescData = file_UserService_proto_rawDesc
)

func file_UserService_proto_rawDescGZIP() []byte {
	file_UserService_proto_rawDescOnce.Do(func() {
		file_UserService_proto_rawDescData = protoimpl.X.CompressGZIP(file_UserService_proto_rawDescData)
	})
	return file_UserService_proto_rawDescData
}

var file_UserService_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_UserService_proto_goTypes = []interface{}{
	(*Page)(nil),                   // 0: UserService.Page
	(*UserPassLoginReq)(nil),       // 1: UserService.UserPassLoginReq
	(*OauthTokenReq)(nil),          // 2: UserService.OauthTokenReq
	(*OauthTokenResp)(nil),         // 3: UserService.OauthTokenResp
	(*UserPassLoginResp)(nil),      // 4: UserService.UserPassLoginResp
	(*PermissionInfo)(nil),         // 5: UserService.PermissionInfo
	(*CreateUserReq)(nil),          // 6: UserService.CreateUserReq
	(*CreateUserResp)(nil),         // 7: UserService.CreateUserResp
	(*UpdateUserReq)(nil),          // 8: UserService.UpdateUserReq
	(*UpdateUserResp)(nil),         // 9: UserService.UpdateUserResp
	(*ListUserReq)(nil),            // 10: UserService.ListUserReq
	(*ListUserResp)(nil),           // 11: UserService.ListUserResp
	(*UserDetail)(nil),             // 12: UserService.UserDetail
	(*ListRoleReq)(nil),            // 13: UserService.ListRoleReq
	(*ListRoleResp)(nil),           // 14: UserService.ListRoleResp
	(*RoleDetail)(nil),             // 15: UserService.RoleDetail
	(*DeleteUserReq)(nil),          // 16: UserService.DeleteUserReq
	(*DeleteUserResp)(nil),         // 17: UserService.DeleteUserResp
	(*UserInfoReq)(nil),            // 18: UserService.UserInfoReq
	(*CreateOauthAccountReq)(nil),  // 19: UserService.CreateOauthAccountReq
	(*CreateOauthAccountResp)(nil), // 20: UserService.CreateOauthAccountResp
	(*ResetOauthAccountReq)(nil),   // 21: UserService.ResetOauthAccountReq
	(*GetOauthAccountReq)(nil),     // 22: UserService.GetOauthAccountReq
	(*GetOauthAccountResp)(nil),    // 23: UserService.GetOauthAccountResp
	(*GetOauthTokenReq)(nil),       // 24: UserService.GetOauthTokenReq
	(*BindOauthPermissionReq)(nil), // 25: UserService.BindOauthPermissionReq
	(*GetRolesReq)(nil),            // 26: UserService.GetRolesReq
	(*RoleDTO)(nil),                // 27: UserService.RoleDTO
	(*GetRolesResp)(nil),           // 28: UserService.GetRolesResp
	(*GetPermissionsReq)(nil),      // 29: UserService.GetPermissionsReq
	(*PermissionDTO)(nil),          // 30: UserService.PermissionDTO
	(*GetPermissionsResp)(nil),     // 31: UserService.GetPermissionsResp
	(*CreateRoleReq)(nil),          // 32: UserService.CreateRoleReq
	(*CreateRoleResp)(nil),         // 33: UserService.CreateRoleResp
	(*UpdateRoleReq)(nil),          // 34: UserService.UpdateRoleReq
	(*UpdateRoleResp)(nil),         // 35: UserService.UpdateRoleResp
	(*DeleteRoleReq)(nil),          // 36: UserService.DeleteRoleReq
	(*DeleteRoleResp)(nil),         // 37: UserService.DeleteRoleResp
	(*ListAgreementReq)(nil),       // 38: UserService.ListAgreementReq
	(*AgreementResp)(nil),          // 39: UserService.AgreementResp
	(*ListAgreementResp)(nil),      // 40: UserService.ListAgreementResp
	(*GetAgreementReq)(nil),        // 41: UserService.GetAgreementReq
	(*AgreementContent)(nil),       // 42: UserService.AgreementContent
	(*timestamppb.Timestamp)(nil),  // 43: google.protobuf.Timestamp
}
var file_UserService_proto_depIdxs = []int32{
	5,  // 0: UserService.OauthTokenResp.permissions:type_name -> UserService.PermissionInfo
	5,  // 1: UserService.UserPassLoginResp.permissions:type_name -> UserService.PermissionInfo
	43, // 2: UserService.UserPassLoginResp.agreementAt:type_name -> google.protobuf.Timestamp
	0,  // 3: UserService.ListUserReq.page:type_name -> UserService.Page
	12, // 4: UserService.ListUserResp.list:type_name -> UserService.UserDetail
	43, // 5: UserService.UserDetail.createdAt:type_name -> google.protobuf.Timestamp
	0,  // 6: UserService.ListRoleReq.page:type_name -> UserService.Page
	15, // 7: UserService.ListRoleResp.list:type_name -> UserService.RoleDetail
	43, // 8: UserService.RoleDetail.createdAt:type_name -> google.protobuf.Timestamp
	5,  // 9: UserService.GetOauthAccountResp.permissions:type_name -> UserService.PermissionInfo
	43, // 10: UserService.GetOauthAccountResp.tokenExpire:type_name -> google.protobuf.Timestamp
	43, // 11: UserService.GetOauthAccountResp.refreshTokenExpire:type_name -> google.protobuf.Timestamp
	0,  // 12: UserService.GetRolesReq.page:type_name -> UserService.Page
	43, // 13: UserService.RoleDTO.createdAt:type_name -> google.protobuf.Timestamp
	27, // 14: UserService.GetRolesResp.list:type_name -> UserService.RoleDTO
	0,  // 15: UserService.GetPermissionsReq.page:type_name -> UserService.Page
	43, // 16: UserService.PermissionDTO.createdAt:type_name -> google.protobuf.Timestamp
	30, // 17: UserService.GetPermissionsResp.list:type_name -> UserService.PermissionDTO
	0,  // 18: UserService.ListAgreementReq.page:type_name -> UserService.Page
	43, // 19: UserService.AgreementResp.agreementAt:type_name -> google.protobuf.Timestamp
	39, // 20: UserService.ListAgreementResp.list:type_name -> UserService.AgreementResp
	0,  // 21: UserService.ListAgreementResp.page:type_name -> UserService.Page
	1,  // 22: UserService.UserService.PassLogin:input_type -> UserService.UserPassLoginReq
	2,  // 23: UserService.UserService.OauthToken:input_type -> UserService.OauthTokenReq
	24, // 24: UserService.UserService.GetOauthToken:input_type -> UserService.GetOauthTokenReq
	19, // 25: UserService.UserService.CreateOauthAccount:input_type -> UserService.CreateOauthAccountReq
	21, // 26: UserService.UserService.ResetOauthAccountSecret:input_type -> UserService.ResetOauthAccountReq
	22, // 27: UserService.UserService.GetOauthAccount:input_type -> UserService.GetOauthAccountReq
	25, // 28: UserService.UserService.BindOauthPermission:input_type -> UserService.BindOauthPermissionReq
	6,  // 29: UserService.UserService.CreateUser:input_type -> UserService.CreateUserReq
	8,  // 30: UserService.UserService.UpdateUser:input_type -> UserService.UpdateUserReq
	10, // 31: UserService.UserService.ListUser:input_type -> UserService.ListUserReq
	13, // 32: UserService.UserService.ListRole:input_type -> UserService.ListRoleReq
	16, // 33: UserService.UserService.DeleteUser:input_type -> UserService.DeleteUserReq
	18, // 34: UserService.UserService.UserInfo:input_type -> UserService.UserInfoReq
	26, // 35: UserService.RoleService.GetRoles:input_type -> UserService.GetRolesReq
	29, // 36: UserService.RoleService.GetPermissions:input_type -> UserService.GetPermissionsReq
	32, // 37: UserService.RoleService.CreateRole:input_type -> UserService.CreateRoleReq
	34, // 38: UserService.RoleService.UpdateRole:input_type -> UserService.UpdateRoleReq
	36, // 39: UserService.RoleService.DeleteRole:input_type -> UserService.DeleteRoleReq
	38, // 40: UserService.AgreementService.ListAgreement:input_type -> UserService.ListAgreementReq
	4,  // 41: UserService.UserService.PassLogin:output_type -> UserService.UserPassLoginResp
	3,  // 42: UserService.UserService.OauthToken:output_type -> UserService.OauthTokenResp
	3,  // 43: UserService.UserService.GetOauthToken:output_type -> UserService.OauthTokenResp
	20, // 44: UserService.UserService.CreateOauthAccount:output_type -> UserService.CreateOauthAccountResp
	20, // 45: UserService.UserService.ResetOauthAccountSecret:output_type -> UserService.CreateOauthAccountResp
	23, // 46: UserService.UserService.GetOauthAccount:output_type -> UserService.GetOauthAccountResp
	3,  // 47: UserService.UserService.BindOauthPermission:output_type -> UserService.OauthTokenResp
	7,  // 48: UserService.UserService.CreateUser:output_type -> UserService.CreateUserResp
	9,  // 49: UserService.UserService.UpdateUser:output_type -> UserService.UpdateUserResp
	11, // 50: UserService.UserService.ListUser:output_type -> UserService.ListUserResp
	14, // 51: UserService.UserService.ListRole:output_type -> UserService.ListRoleResp
	17, // 52: UserService.UserService.DeleteUser:output_type -> UserService.DeleteUserResp
	12, // 53: UserService.UserService.UserInfo:output_type -> UserService.UserDetail
	28, // 54: UserService.RoleService.GetRoles:output_type -> UserService.GetRolesResp
	31, // 55: UserService.RoleService.GetPermissions:output_type -> UserService.GetPermissionsResp
	33, // 56: UserService.RoleService.CreateRole:output_type -> UserService.CreateRoleResp
	35, // 57: UserService.RoleService.UpdateRole:output_type -> UserService.UpdateRoleResp
	37, // 58: UserService.RoleService.DeleteRole:output_type -> UserService.DeleteRoleResp
	40, // 59: UserService.AgreementService.ListAgreement:output_type -> UserService.ListAgreementResp
	41, // [41:60] is the sub-list for method output_type
	22, // [22:41] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_UserService_proto_init() }
func file_UserService_proto_init() {
	if File_UserService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_UserService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPassLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPassLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOauthAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOauthAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetOauthAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOauthAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOauthAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOauthTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindOauthPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgreementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgreementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgreementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserService_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UserService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_UserService_proto_goTypes,
		DependencyIndexes: file_UserService_proto_depIdxs,
		MessageInfos:      file_UserService_proto_msgTypes,
	}.Build()
	File_UserService_proto = out.File
	file_UserService_proto_rawDesc = nil
	file_UserService_proto_goTypes = nil
	file_UserService_proto_depIdxs = nil
}
